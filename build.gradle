/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates
 * and other contributors as indicated by the @author tags.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:1.2.3"
        classpath "com.jakewharton.sdkmanager:gradle-plugin:0.12.0"
    }
}

apply plugin: "android-sdk-manager"
apply plugin: "com.android.application"

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = 0

        versionName buildVersionName(versionMajor, versionMinor, versionPatch)
        versionCode buildVersionCode(versionMajor, versionMinor, versionPatch)

        minSdkVersion 16
        targetSdkVersion 22

        def serverFile = file("server.properties")
        def serverProperties = new Properties()

        if (serverFile.exists()) {
            serverProperties.load(serverFile.newInputStream())

            buildConfigField "String", "UPS_URL", serverProperties["ups.url"]
            buildConfigField "String", "UPS_VARIANT", serverProperties["ups.variant"]
            buildConfigField "String", "UPS_SECRET", serverProperties["ups.secret"]
            buildConfigField "String", "GCM_SENDER", serverProperties["gcm.sender"]
        }
    }

    dexOptions {
        preDexLibraries = !project.hasProperty("preDexDisabled")
    }
}

def buildVersionName(versionMajor, versionMinor, versionPatch) {
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}

def buildVersionCode(versionMajor, versionMinor, versionPatch) {
    return versionMajor * 10 ** 2 + versionMinor * 10 ** 1 + versionPatch * 10 ** 0
}

dependencies {
    repositories {
        mavenCentral()
    }

    compile "com.android.support:appcompat-v7:22.2.0"
    compile "com.android.support:support-v4:22.2.0"
    compile "com.android.support:support-annotations:22.2.0"
    compile "com.github.lecho:hellocharts-library:1.5.5@aar"
    compile "com.jakewharton:butterknife:6.1.0"
    compile "com.jakewharton.timber:timber:3.1.0"
    compile "org.jboss.aerogear:aerogear-android-authz:2.1.0"
    compile "org.jboss.aerogear:aerogear-android-pipe:2.1.0"
    compile "org.jboss.aerogear:aerogear-android-push:2.1.0"
}
